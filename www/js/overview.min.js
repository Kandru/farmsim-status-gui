var map=null,farmsColors={},serverData={},farmsData={},farmlandsData={};function getServerData(){return fetch(`./server.json?timestamp=${(new Date).getTime()}`).then((response=>response.json())).then((data=>{serverData=data})).catch((error=>console.error("error loading server:",error)))}function getFarmsData(){return fetch(`./farms.json?timestamp=${(new Date).getTime()}`).then((response=>response.json())).then((data=>{farmsData=data})).catch((error=>console.error("error loading farms:",error)))}function getFarmlandsData(){return fetch(`./farmlands.json?timestamp=${(new Date).getTime()}`).then((response=>response.json())).then((data=>{farmlandsData=data})).catch((error=>console.error("error loading farmlands:",error)))}function generateColor(index){return`hsl(${137.508*index%360}, 100%, 50%)`}function generateMap(){Promise.all([getServerData(),getFarmsData(),getFarmlandsData()]).then((()=>{if(!(serverData.map&&serverData.map.name&&serverData.map.size&&serverData.map.width&&serverData.map.height))return;map=L.map("map",{crs:L.CRS.Simple,minZoom:-5,maxBounds:[[-serverData.map.size/2,-serverData.map.size/2],[serverData.map.size/2,serverData.map.size/2]]}).setView([0,0],-5),L.imageOverlay("./images/maps/"+serverData.map.name.replace(/ /g,"_")+".jpg",[[-serverData.map.size/2,-serverData.map.size/2],[serverData.map.size/2,serverData.map.size/2]]).addTo(map);let farmlands=Object.values(farmlandsData).filter((entry=>null!==entry.polygons&&void 0!==entry.polygons)).map((entry=>({type:"Feature",properties:{id:entry.id,owner:entry.farmId,popup:"Field "+entry.id+(entry.farmId>0?` (${entry.farmId})`:"")},geometry:{type:"Polygon",coordinates:[Object.values(entry.polygons).map((coord=>[parseFloat(coord.x),-parseFloat(coord.y)]))]}}))),farmOwners=[...new Set(farmlands.map((field=>field.properties.owner)))];farmsColors={},farmOwners.forEach(((owner,index)=>{farmsColors[owner]=generateColor(index)})),farmsColors[0]="#808080",L.geoJSON(farmlands,{style:function(farmland){return{color:farmsColors[farmland.properties.owner]}}}).addTo(map).eachLayer((function(layer){layer.bindTooltip(layer.feature.properties.popup);const center=layer.getBounds().getCenter();L.marker(center,{icon:L.divIcon({className:"map-marker-field-id",html:layer.feature.properties.id,iconSize:[10,10]})}).addTo(map)}))})).catch((error=>console.error("error loading data:",error)))}generateMap();